@startuml
title Сценарий виртуальной обработки
skinparam backgroundcolor AntiqueWhite/White

  control "Процессор" as proc #orange
  participant "Операционная\nсистема" as os #orchid
  participant "Виртуальная\nмашина" as vm #lightblue
  box Приложение #ivory
    participant "Диспетчер" as dispatcher #lightgreen
    participant "Рабочий" as worker #lightgreen
  end box

== Обрабатываем запрос Клиента ==
autonumber 1.1
group Клиент соединяется с сервером
  -[#red]> os : TCP-соединение
  os -[#red]> vm : уведомить\nо попытке\nсоединения
  vm -[#red]>> vm: перевести\nвиртуальный\n<i>диспетчерский</i>\nтред в состояние\n«ожидание\nвыполнения»
  ...ждём, пока освободится поток-носитель...
  os -[#red]> os: поток-носитель\nвзялся\nвыполнять\nкод треда
  activate dispatcher #cyan
  rnote over dispatcher: Активный виртуальный диспетчерский поток выполнения
end
group Активируется виртуальный рабочий тред
  dispatcher -[#blue]>> vm : создать\nновый\nвиртуальный\nтред
  ...ждём, пока освободится поток-носитель...
  os -[#blue]> os: поток-носитель\nвзялся\nвыполнять\nкод треда
  activate worker #lightgreen
  rnote over worker: Активный виртуальный\nрабочий поток выполнения
  deactivate dispatcher
end
group Обрабатываются данные клиента
  worker ->> worker : вычитать\nпоступившие\nдвоичные данные
  note left: в общем случае\nэта I/O операция\nтоже бьётся на несколько шагов
  worker ->> worker : разобрать запрос\nклиента
  note left: двоичные данные →\nJSON →\nобъектное представление
  worker ->> worker : сформировать\nJDBC-запрос
end
group Запрос уходит в Базу данных
  worker -[#green]>] : JDBC-запрос
  note left: в общем случае\nэта I/O операция\nтоже бьётся на несколько шагов
  hnote over worker: Считаем, что уже имеется пул соединений с БД.
end
== Ждём ответа Базы данных ==
autonumber 2.1
group Приостанавливается виртуальный тред
  vm -[#blue]>> vm: перевести тред\nв состояние\n«приостановлен»
  vm -[#blue]> vm: сохранить контекст\n<i>виртуального</i> треда
  deactivate worker
end
...и какое-то время спустя:...
== Формируем и отправляем ответ Клиенту ==
autonumber 3.1
group Приходит ответ из Базы данных
  os <[#green]-- : JDBC-ответ
  os -[#brown]> vm : уведомить\nо получении\nответа
  vm -[#brown]>> vm: перевести\nвиртуальный\nрабочий\nтред в состояние\n«ожидание\nвыполнения»
  ...ждём, пока освободится поток-носитель...
  os -[#brown]> os: поток-носитель\nвзялся\nвыполнять\nкод треда
  activate worker #lightgreen
  rnote over worker: Активный виртуальный\nрабочий поток выполнения
end
group Обрабатывается ответ Базы данных
  worker ->> worker : вычитать\nпоступившие\nиз БД\nдвоичные данные
  note left: в общем случае\nэта I/O операция\nтоже бьётся на несколько шагов
  worker ->> worker : разобрать\nответ БД
  note left: двоичные данные →\nпротокол JDBC →\nобъектное представление
  worker ->> worker: сериализовать\nответ\nклиенту
  note left: объектное представление →\nJSON →\nдвоичные данные
end
group Ответ уходит клиенту [в общем случае\nэта I/O операция\nтоже бьётся на несколько шагов]
  [<-[#red]- worker: отослать данные
  deactivate worker
end
@enduml
